<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xdev.auth.organization.dao.SysOrganizationMapper">
    <resultMap id="BaseResultMap" type="cn.xdev.auth.organization.model.SysOrganization">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parent_id" jdbcType="INTEGER"/>
        <result column="parent_ids" property="parent_ids" jdbcType="VARCHAR"/>
        <result column="position" property="position" jdbcType="INTEGER"/>
        <result column="available" property="available" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, parent_id, parent_ids, position, available
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xdev.auth.organization.model.SysOrganizationExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_organization
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from sys_organization
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_organization
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.xdev.auth.organization.model.SysOrganizationExample">
        delete from sys_organization
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.xdev.auth.organization.model.SysOrganization">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into sys_organization (id, name, parent_id,
        parent_ids, position, available
        )
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parent_id,jdbcType=INTEGER},
        #{parent_ids,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, #{available,jdbcType=BIT}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.xdev.auth.organization.model.SysOrganization">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into sys_organization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parent_id != null">
                parent_id,
            </if>
            <if test="parent_ids != null">
                parent_ids,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parent_id != null">
                #{parent_id,jdbcType=INTEGER},
            </if>
            <if test="parent_ids != null">
                #{parent_ids,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                #{available,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.xdev.auth.organization.model.SysOrganizationExample"
            resultType="java.lang.Integer">
        select count(*) from sys_organization
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_organization
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.parent_id != null">
                parent_id = #{record.parent_id,jdbcType=INTEGER},
            </if>
            <if test="record.parent_ids != null">
                parent_ids = #{record.parent_ids,jdbcType=VARCHAR},
            </if>
            <if test="record.position != null">
                position = #{record.position,jdbcType=INTEGER},
            </if>
            <if test="record.available != null">
                available = #{record.available,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_organization
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        parent_id = #{record.parent_id,jdbcType=INTEGER},
        parent_ids = #{record.parent_ids,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=INTEGER},
        available = #{record.available,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.xdev.auth.organization.model.SysOrganization">
        update sys_organization
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parent_id != null">
                parent_id = #{parent_id,jdbcType=INTEGER},
            </if>
            <if test="parent_ids != null">
                parent_ids = #{parent_ids,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.xdev.auth.organization.model.SysOrganization">
        update sys_organization
        set name = #{name,jdbcType=VARCHAR},
          parent_id = #{parent_id,jdbcType=INTEGER},
          parent_ids = #{parent_ids,jdbcType=VARCHAR},
          position = #{position,jdbcType=INTEGER},
          available = #{available,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="move" parameterType="map">
        update sys_organization set parent_ids=concat(#{target,jdbcType=VARCHAR}, substring(parent_ids, length(#{source,jdbcType=VARCHAR})+1)) where parent_ids like #{self,jdbcType=VARCHAR}
    </update>
    <update id="diffOrderNoByExample" parameterType="map" >
        update sys_organization
        <set >
            position = position - 1,
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="addOrderNoByExample" parameterType="map" >
        update sys_organization
        <set >
            position = position + 1,
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
</mapper>